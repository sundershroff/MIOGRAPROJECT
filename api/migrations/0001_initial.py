# Generated by Django 5.0 on 2024-05-08 12:51

import datetime
import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Businessmodel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.TextField()),
                ('email', models.EmailField(max_length=254)),
                ('phone_number', models.TextField(null=True)),
                ('password', models.TextField()),
                ('otp', models.IntegerField()),
                ('user_otp', models.IntegerField(null=True)),
                ('full_name', models.TextField()),
                ('created_date', models.TextField(null=True)),
                ('profile_picture', models.TextField(null=True)),
                ('device_id', models.JSONField(null=True)),
                ('notification_status', models.BooleanField(default=False, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='d_original_productsmodel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_id', models.TextField(null=True)),
                ('d_id', models.TextField(null=True)),
                ('status', models.TextField(default=False, null=True)),
                ('category', models.TextField(null=True)),
                ('subcategory', models.TextField(null=True)),
                ('product', models.JSONField(null=True)),
                ('created_date', models.DateField(auto_now_add=True, null=True)),
                ('district', models.TextField(null=True)),
                ('business_status', models.TextField(default='golive', null=True)),
                ('rating', models.FloatField(null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
            ],
        ),
        migrations.CreateModel(
            name='d_originalmodel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('d_id', models.TextField(null=True)),
                ('Business_id', models.TextField()),
                ('seller_name', models.TextField()),
                ('business_name', models.TextField()),
                ('pan_number', models.TextField()),
                ('gst', models.TextField()),
                ('contact', models.TextField()),
                ('alternate_contact', models.TextField()),
                ('door_number', models.TextField(null=True)),
                ('street_name', models.TextField(null=True)),
                ('area', models.TextField(null=True)),
                ('region', models.TextField(null=True)),
                ('aadhar_number', models.TextField(null=True)),
                ('pincode', models.TextField(null=True)),
                ('fssa', models.TextField()),
                ('pin_your_location', models.TextField()),
                ('name', models.TextField()),
                ('account_number', models.TextField()),
                ('ifsc_code', models.TextField()),
                ('upi_id', models.TextField()),
                ('gpay_number', models.TextField()),
                ('aadhar', models.TextField()),
                ('pan_file', models.TextField()),
                ('profile', models.TextField()),
                ('bank_passbook', models.TextField()),
                ('gst_file', models.TextField()),
                ('date', models.DateField(auto_now_add=True, null=True)),
                ('category', models.TextField(null=True)),
                ('total_revenue', models.TextField(null=True)),
                ('monthly_revenue', models.TextField(null=True)),
                ('latitude', models.TextField(null=True)),
                ('longitude', models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='dailymio_model',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dmio_id', models.TextField(null=True)),
                ('Business_id', models.TextField(null=True)),
                ('seller_name', models.TextField(null=True)),
                ('business_name', models.TextField(null=True)),
                ('pan_number', models.TextField(null=True)),
                ('gst', models.TextField(null=True)),
                ('contact', models.TextField(null=True)),
                ('alternate_contact', models.TextField(null=True)),
                ('door_number', models.TextField(null=True)),
                ('street_name', models.TextField(null=True)),
                ('area', models.TextField(null=True)),
                ('aadhar_number', models.TextField(null=True)),
                ('pincode', models.TextField(null=True)),
                ('fssa', models.TextField(null=True)),
                ('region', models.TextField(null=True)),
                ('pin_your_location', models.TextField(null=True)),
                ('name', models.TextField(null=True)),
                ('account_number', models.TextField(null=True)),
                ('ifsc_code', models.TextField(null=True)),
                ('upi_id', models.TextField(null=True)),
                ('gpay_number', models.TextField(null=True)),
                ('aadhar', models.TextField(null=True)),
                ('pan_file', models.TextField(null=True)),
                ('profile', models.TextField(null=True)),
                ('bank_passbook', models.TextField(null=True)),
                ('gst_file', models.TextField(null=True)),
                ('date', models.DateField(auto_now_add=True, null=True)),
                ('category', models.TextField(null=True)),
                ('total_revenue', models.TextField(null=True)),
                ('monthly_revenue', models.TextField(null=True)),
                ('latitude', models.TextField(null=True)),
                ('longitude', models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Delivery_model',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.TextField(null=True)),
                ('name', models.TextField(null=True)),
                ('phone_number', models.TextField(null=True)),
                ('wp_number', models.TextField(null=True)),
                ('email', models.EmailField(max_length=254)),
                ('aadhar_number', models.TextField(null=True)),
                ('pan_number', models.TextField(null=True)),
                ('driving_licensenum', models.TextField(null=True)),
                ('profile_picture', models.TextField(null=True)),
                ('bank_name', models.TextField(null=True)),
                ('acc_number', models.TextField(null=True)),
                ('name_asper_passbook', models.TextField(null=True)),
                ('ifsc_code', models.TextField(null=True)),
                ('bank_passbok_pic', models.TextField(null=True)),
                ('aadhar_pic', models.TextField(null=True)),
                ('pan_pic', models.TextField(null=True)),
                ('drlicence_pic', models.TextField(null=True)),
                ('delivery_type', models.TextField(null=True)),
                ('approve_status', models.TextField(null=True)),
                ('today_earnings', models.TextField(null=True)),
                ('region', models.TextField(null=True)),
                ('submit_issues', models.TextField(null=True)),
                ('upload_issues', models.TextField(null=True)),
                ('otp', models.IntegerField(null=True)),
                ('device_id', models.TextField(null=True)),
                ('user_otp', models.IntegerField(null=True)),
                ('total_order_amount', models.TextField(null=True)),
                ('has_withdrawn', models.BooleanField(default=False)),
                ('floating_status', models.BooleanField(default=False)),
                ('float_amount', models.TextField(null=True)),
                ('notification_status', models.BooleanField(default=False, null=True)),
                ('emergency', models.BooleanField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='dmio_productsmodel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_id', models.TextField(null=True)),
                ('dmio_id', models.TextField(null=True)),
                ('status', models.TextField(default=False, null=True)),
                ('category', models.TextField(null=True)),
                ('subcategory', models.TextField(null=True)),
                ('product', models.JSONField(null=True)),
                ('created_date', models.DateField(auto_now_add=True, null=True)),
                ('business_status', models.TextField(default='golive', null=True)),
                ('rating', models.FloatField(null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
            ],
        ),
        migrations.CreateModel(
            name='End_Usermodel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.TextField()),
                ('email', models.EmailField(max_length=254)),
                ('phone_number', models.TextField(null=True)),
                ('password', models.TextField()),
                ('full_name', models.TextField()),
                ('created_date', models.TextField(null=True)),
                ('otp', models.IntegerField(null=True)),
                ('user_otp', models.IntegerField(null=True)),
                ('profile_picture', models.TextField(null=True)),
                ('address_data', models.JSONField(null=True)),
                ('latitude', models.TextField(null=True)),
                ('longitude', models.TextField(null=True)),
                ('notification_status', models.BooleanField(default=False, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='food_productsmodel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_id', models.TextField(null=True)),
                ('food_id', models.TextField(null=True)),
                ('status', models.TextField(default=False, null=True)),
                ('category', models.TextField(null=True)),
                ('subcategory', models.TextField(null=True)),
                ('product', models.JSONField(null=True)),
                ('created_date', models.DateField(auto_now_add=True, null=True)),
                ('business_status', models.TextField(default='golive', null=True)),
                ('rating', models.FloatField(null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
            ],
        ),
        migrations.CreateModel(
            name='foodmodel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('food_id', models.TextField(null=True)),
                ('Business_id', models.TextField()),
                ('seller_name', models.TextField()),
                ('business_name', models.TextField()),
                ('pan_number', models.TextField()),
                ('gst', models.TextField()),
                ('contact', models.TextField()),
                ('alternate_contact', models.TextField()),
                ('door_number', models.TextField(null=True)),
                ('street_name', models.TextField(null=True)),
                ('area', models.TextField(null=True)),
                ('aadhar_number', models.TextField(null=True)),
                ('pincode', models.TextField(null=True)),
                ('fssa', models.TextField()),
                ('region', models.TextField(null=True)),
                ('pin_your_location', models.TextField()),
                ('name', models.TextField()),
                ('account_number', models.TextField()),
                ('ifsc_code', models.TextField()),
                ('upi_id', models.TextField()),
                ('gpay_number', models.TextField()),
                ('aadhar', models.TextField()),
                ('pan_file', models.TextField()),
                ('profile', models.TextField()),
                ('bank_passbook', models.TextField()),
                ('gst_file', models.TextField()),
                ('date', models.DateField(auto_now_add=True, null=True)),
                ('category', models.TextField(null=True)),
                ('total_revenue', models.TextField(null=True)),
                ('monthly_revenue', models.TextField(null=True)),
                ('latitude', models.TextField(null=True)),
                ('longitude', models.TextField(null=True)),
                ('rating', models.FloatField(null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
            ],
        ),
        migrations.CreateModel(
            name='fresh_productsmodel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_id', models.TextField(null=True)),
                ('fresh_id', models.TextField(null=True)),
                ('status', models.TextField(default=False, null=True)),
                ('category', models.TextField(null=True)),
                ('subcategory', models.TextField(null=True)),
                ('product', models.JSONField(null=True)),
                ('created_date', models.DateField(auto_now_add=True, null=True)),
                ('business_status', models.TextField(default='golive', null=True)),
                ('rating', models.FloatField(null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
            ],
        ),
        migrations.CreateModel(
            name='freshcutsmodel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fresh_id', models.TextField(null=True)),
                ('Business_id', models.TextField()),
                ('seller_name', models.TextField()),
                ('business_name', models.TextField()),
                ('pan_number', models.TextField()),
                ('gst', models.TextField()),
                ('contact', models.TextField()),
                ('alternate_contact', models.TextField()),
                ('door_number', models.TextField(null=True)),
                ('street_name', models.TextField(null=True)),
                ('area', models.TextField(null=True)),
                ('aadhar_number', models.TextField(null=True)),
                ('pincode', models.TextField(null=True)),
                ('fssa', models.TextField()),
                ('region', models.TextField(null=True)),
                ('pin_your_location', models.TextField()),
                ('name', models.TextField()),
                ('account_number', models.TextField()),
                ('ifsc_code', models.TextField()),
                ('upi_id', models.TextField()),
                ('gpay_number', models.TextField()),
                ('aadhar', models.TextField()),
                ('pan_file', models.TextField()),
                ('profile', models.TextField()),
                ('bank_passbook', models.TextField()),
                ('gst_file', models.TextField()),
                ('date', models.DateField(auto_now_add=True, null=True)),
                ('category', models.TextField(null=True)),
                ('total_revenue', models.TextField(null=True)),
                ('monthly_revenue', models.TextField(null=True)),
                ('latitude', models.TextField(null=True)),
                ('longitude', models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='jewel_productsmodel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_id', models.TextField(null=True)),
                ('jewel_id', models.TextField(null=True)),
                ('status', models.TextField(default=False, null=True)),
                ('category', models.TextField(null=True)),
                ('subcategory', models.TextField(null=True)),
                ('product', models.JSONField(null=True)),
                ('business_status', models.TextField(default='golive', null=True)),
                ('created_date', models.DateField(auto_now_add=True, null=True)),
                ('rating', models.FloatField(null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
            ],
        ),
        migrations.CreateModel(
            name='jewellerymodel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('jewel_id', models.TextField(null=True)),
                ('Business_id', models.TextField()),
                ('seller_name', models.TextField()),
                ('business_name', models.TextField()),
                ('pan_number', models.TextField()),
                ('gst', models.TextField()),
                ('contact', models.TextField()),
                ('alternate_contact', models.TextField()),
                ('door_number', models.TextField(null=True)),
                ('street_name', models.TextField(null=True)),
                ('area', models.TextField(null=True)),
                ('region', models.TextField(null=True)),
                ('aadhar_number', models.TextField(null=True)),
                ('pincode', models.TextField(null=True)),
                ('pin_your_location', models.TextField()),
                ('name', models.TextField()),
                ('account_number', models.TextField()),
                ('ifsc_code', models.TextField()),
                ('upi_id', models.TextField()),
                ('gpay_number', models.TextField()),
                ('aadhar', models.TextField()),
                ('pan_file', models.TextField()),
                ('profile', models.TextField()),
                ('bank_passbook', models.TextField()),
                ('gst_file', models.TextField()),
                ('date', models.DateField(auto_now_add=True, null=True)),
                ('category', models.TextField(null=True)),
                ('total_revenue', models.TextField(null=True)),
                ('monthly_revenue', models.TextField(null=True)),
                ('latitude', models.TextField(null=True)),
                ('longitude', models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notify_id', models.TextField(null=True)),
                ('recipient', models.TextField(null=True)),
                ('sender_id', models.TextField(null=True)),
                ('message_title', models.TextField(null=True)),
                ('message_desc', models.TextField(null=True)),
                ('notify_date', models.DateField(auto_now_add=True)),
                ('is_read', models.BooleanField(default=False, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='pharmacy_model',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pharm_id', models.TextField(null=True)),
                ('Business_id', models.TextField()),
                ('seller_name', models.TextField()),
                ('business_name', models.TextField()),
                ('pan_number', models.TextField()),
                ('gst', models.TextField()),
                ('contact', models.TextField()),
                ('alternate_contact', models.TextField()),
                ('pincode', models.TextField(null=True)),
                ('aadhar_number', models.TextField(null=True)),
                ('door_number', models.TextField(null=True)),
                ('street_name', models.TextField(null=True)),
                ('area', models.TextField(null=True)),
                ('fssa', models.TextField()),
                ('region', models.TextField(null=True)),
                ('pin_your_location', models.TextField()),
                ('name', models.TextField()),
                ('account_number', models.TextField()),
                ('ifsc_code', models.TextField()),
                ('upi_id', models.TextField()),
                ('gpay_number', models.TextField()),
                ('aadhar', models.TextField()),
                ('pan_file', models.TextField()),
                ('profile', models.TextField()),
                ('bank_passbook', models.TextField()),
                ('gst_file', models.TextField()),
                ('date', models.DateField(auto_now_add=True, null=True)),
                ('category', models.TextField(null=True)),
                ('total_revenue', models.TextField(null=True)),
                ('monthly_revenue', models.TextField(null=True)),
                ('latitude', models.TextField(null=True)),
                ('longitude', models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='pharmacy_productsmodel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_id', models.TextField(null=True)),
                ('pharm_id', models.TextField(null=True)),
                ('status', models.TextField(default=False, null=True)),
                ('category', models.TextField(null=True)),
                ('subcategory', models.TextField(null=True)),
                ('product', models.JSONField(null=True)),
                ('created_date', models.DateField(auto_now_add=True, null=True)),
                ('business_status', models.TextField(default='golive', null=True)),
                ('rating', models.FloatField(null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
            ],
        ),
        migrations.CreateModel(
            name='shop_productsmodel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_id', models.TextField(null=True)),
                ('shop_id', models.TextField(null=True)),
                ('status', models.TextField(default=False, null=True)),
                ('business_status', models.TextField(default='golive', null=True)),
                ('category', models.TextField(null=True)),
                ('subcategory', models.TextField(null=True)),
                ('subcategory1', models.TextField(null=True)),
                ('product', models.JSONField(null=True)),
                ('created_date', models.DateField(auto_now_add=True, null=True)),
                ('rating', models.FloatField(null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
            ],
        ),
        migrations.CreateModel(
            name='shoppingmodel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shop_id', models.TextField(null=True)),
                ('Business_id', models.TextField()),
                ('seller_name', models.TextField()),
                ('business_name', models.TextField()),
                ('pan_number', models.TextField()),
                ('gst', models.TextField()),
                ('contact', models.TextField()),
                ('alternate_contact', models.TextField()),
                ('door_number', models.TextField(null=True)),
                ('street_name', models.TextField(null=True)),
                ('area', models.TextField(null=True)),
                ('region', models.TextField(null=True)),
                ('aadhar_number', models.TextField(null=True)),
                ('pincode', models.TextField(null=True)),
                ('pin_your_location', models.TextField()),
                ('name', models.TextField()),
                ('account_number', models.TextField()),
                ('ifsc_code', models.TextField()),
                ('upi_id', models.TextField()),
                ('gpay_number', models.TextField()),
                ('aadhar', models.TextField()),
                ('pan_file', models.TextField()),
                ('profile', models.TextField()),
                ('bank_passbook', models.TextField()),
                ('gst_file', models.TextField()),
                ('date', models.DateField(auto_now_add=True, null=True)),
                ('category', models.TextField(null=True)),
                ('total_revenue', models.TextField(null=True)),
                ('monthly_revenue', models.TextField(null=True)),
                ('latitude', models.TextField(null=True)),
                ('longitude', models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='used_productsmodel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.TextField(null=True)),
                ('product_id', models.TextField(null=True)),
                ('status', models.TextField(default=False, null=True)),
                ('category', models.TextField(null=True)),
                ('subcategory', models.TextField(null=True)),
                ('product', models.JSONField(null=True)),
                ('created_date', models.DateField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='deliverylogintable_model',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('today_date', models.DateField(auto_now_add=True, null=True)),
                ('login_time', models.TimeField(auto_now_add=True, null=True)),
                ('logout_time', models.TimeField(null=True)),
                ('status', models.BooleanField(null=True)),
                ('delivery_status', models.TextField(null=True)),
                ('delivery_type', models.TextField(null=True)),
                ('region', models.TextField(null=True)),
                ('deliveryperson', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.delivery_model')),
            ],
        ),
        migrations.CreateModel(
            name='Reviews',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(null=True)),
                ('rating', models.FloatField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('created_date', models.DateField(auto_now_add=True, null=True)),
                ('product_id', models.TextField(null=True)),
                ('d_origin_product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.d_original_productsmodel')),
                ('dailymio_product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.dmio_productsmodel')),
                ('food_product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.food_productsmodel')),
                ('freshcut_product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.fresh_productsmodel')),
                ('jewel_product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.jewel_productsmodel')),
                ('pharmacy_product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.pharmacy_productsmodel')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.end_usermodel')),
                ('shop_product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.shop_productsmodel')),
            ],
        ),
        migrations.CreateModel(
            name='Offers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('discount', models.TextField(default=0)),
                ('isAvailable', models.BooleanField(default=True)),
                ('start_date', models.DateField(null=True)),
                ('end_date', models.DateField(null=True)),
                ('d_origin_product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.d_original_productsmodel')),
                ('dailymio_product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.dmio_productsmodel')),
                ('food_product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.food_productsmodel')),
                ('freshcut_product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.fresh_productsmodel')),
                ('jewel_product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.jewel_productsmodel')),
                ('pharmacy_product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.pharmacy_productsmodel')),
                ('shop_product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.shop_productsmodel')),
            ],
        ),
        migrations.CreateModel(
            name='Carts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cart_id', models.TextField(null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('quantity', models.TextField(null=True)),
                ('total', models.FloatField(blank=True, null=True)),
                ('category', models.TextField(null=True)),
                ('status', models.TextField(null=True)),
                ('d_origin_product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.d_original_productsmodel')),
                ('dailymio_product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.dmio_productsmodel')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.end_usermodel')),
                ('food_product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.food_productsmodel')),
                ('freshcut_product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.fresh_productsmodel')),
                ('jewel_product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.jewel_productsmodel')),
                ('pharmacy_product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.pharmacy_productsmodel')),
                ('shop_product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.shop_productsmodel')),
            ],
        ),
        migrations.CreateModel(
            name='Product_Ordermodel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id', models.TextField(null=True)),
                ('track_id', models.TextField(null=True)),
                ('quantity', models.TextField(null=True)),
                ('order_date', models.DateField(auto_now_add=True, null=True)),
                ('total_amount', models.TextField(null=True)),
                ('product_id', models.TextField(null=True)),
                ('status', models.TextField(null=True)),
                ('expected_deliverydate', models.DateField(default=datetime.date(2024, 5, 15), null=True)),
                ('delivery_date', models.DateField(null=True)),
                ('payment_status', models.TextField(default='', null=True)),
                ('delivery_type', models.TextField(null=True)),
                ('category_data', models.TextField(null=True)),
                ('payment_type', models.TextField(null=True)),
                ('reason', models.TextField(null=True)),
                ('reason_optional', models.TextField(null=True)),
                ('delivery_address', models.JSONField(null=True)),
                ('pincode', models.TextField(null=True)),
                ('emergency', models.TextField(null=True)),
                ('region', models.TextField(null=True)),
                ('emergency_optional', models.TextField(null=True)),
                ('distance', models.TextField(null=True)),
                ('business_pickup', models.BooleanField(default=False, null=True)),
                ('order_total', models.TextField(null=True)),
                ('incentive', models.TextField(null=True)),
                ('ready_to_pick_up', models.BooleanField(default=0)),
                ('ship_to_other_region', models.TextField(null=True)),
                ('float_cash', models.TextField(null=True)),
                ('admin_commission_amount', models.TextField(null=True)),
                ('business', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.businessmodel')),
                ('d_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.d_originalmodel')),
                ('d_original_product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.d_original_productsmodel')),
                ('deliveryperson', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.delivery_model')),
                ('dmio_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.dailymio_model')),
                ('dmio_product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.dmio_productsmodel')),
                ('end_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.end_usermodel')),
                ('food_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.foodmodel')),
                ('food_product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.food_productsmodel')),
                ('fresh_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.freshcutsmodel')),
                ('freshcut_product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.fresh_productsmodel')),
                ('jewel_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.jewellerymodel')),
                ('jewel_product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.jewel_productsmodel')),
                ('pharm_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.pharmacy_model')),
                ('pharmacy_product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.pharmacy_productsmodel')),
                ('shop_product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.shop_productsmodel')),
                ('shop_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.shoppingmodel')),
            ],
        ),
        migrations.CreateModel(
            name='whishlistmodel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('category', models.TextField(null=True)),
                ('d_origin_product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.d_original_productsmodel')),
                ('dailymio_product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.dmio_productsmodel')),
                ('food_product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.food_productsmodel')),
                ('freshcut_product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.fresh_productsmodel')),
                ('jewel_product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.jewel_productsmodel')),
                ('pharmacy_product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.pharmacy_productsmodel')),
                ('shop_product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.shop_productsmodel')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.end_usermodel')),
            ],
        ),
    ]
